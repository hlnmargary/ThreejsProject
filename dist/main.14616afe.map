{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three-orbitcontrols/OrbitControls.js","src/main.js"],"names":["Number","EPSILON","undefined","Math","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","i","l","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","defineProperties","set","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","Matrix4","error","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","z","extractRotation","Vector3","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","d","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","quaternion","_x","_y","_z","_w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","vector","matrix","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","p","Quaternion","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","r","EPS","vFrom","vTo","angleTo","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","Matrix3","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","OffscreenCanvas","width","height","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","name","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","Array","isArray","dispose","transformUv","uv","Vector4","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","getW","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","isWebGLRenderTargetCube","DataTexture","data","isDataTexture","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","object","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","p0","p1","p2","triangle","distanceToPoint","clampedPoint","getBoundingSphere","Sphere","intersect","union","xax","xay","xaz","xbx","xby","xbz","yax","yay","yaz","ybx","yby","ybz","zax","zay","zaz","zbx","zby","zbz","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","Frustum","p3","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","distance","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsUtils","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","color1","color2","UniformsLib","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearCoat","clearCoatRoughness","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","createBuffer","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","buffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","delete","Euler","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Layers","mask","channel","enable","toggle","disable","test","layers","object3DId","Object3D","parent","children","DefaultUp","onRotationChange","onQuaternionChange","enumerable","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","geometries","materials","shapes","JSON","stringify","serialize","library","element","isMesh","isLine","isPoints","parameters","shape","material","uuids","extractFromCache","cache","values","key","recursive","parse","Camera","matrixWorldInverse","OrthographicCamera","zoom","view","updateProjectionMatrix","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","Face3","materialIndex","vertexNormals","vertexColors","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","obj","fromBufferGeometry","indices","positions","normals","uvs","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","sort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","BufferAttribute","itemSize","normalized","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","arrayMax","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","keys","morphAttribute","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","isMaterial","onBeforeCompile","setValues","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","sizeAttenuation","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","MeshBasicMaterial","combine","isMeshBasicMaterial","ShaderMaterial","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","isShaderMaterial","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","vab","vac","vbc","vap","vbp","vcp","d4","vc","d5","d6","vb","va","Mesh","drawMode","updateMorphTargets","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","WebGLBackground","renderer","state","objects","clearColor","clearAlpha","planeCamera","planeMesh","boxMesh","render","renderList","scene","forceClear","background","setClear","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","renderBufferDirect","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBufferRenderer","info","capabilities","mode","setMode","drawArrays","renderInstances","extension","isWebGL2","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","_bufferGeometry","geometryAttributes","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","reset","programs","autoReset","absNumericalSort","WebGLMorphtargets","influencesList","program","objectInfluences","influences","getUniforms","setValue","WebGLObjects","updateList","CubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","addLineNumbers","split","join","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","objectSpaceNormalMap","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","pattern","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","allocateBones","skeleton","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLProperties","painterSortStable","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","renderItem","WebGLRenderLists","lists","list","UniformsCache","light","halfWidth","halfHeight","WebGLLights","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","setup","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","autoUpdate","_gl","_state","BLEND","setTest","setScissorTest","faceCount","shadowCamera","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","renderObject","getDepthMaterial","lightPositionWorld","result","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","WebGLState","utils","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","setBlending","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","getCompressedTextureFormats","formats","COMPRESSED_TEXTURE_FORMATS","useProgram","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","convert","setMaterial","frontFaceCW","setPolygonOffset","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","compressedTexImage2D","apply","WebGLTextures","_videoTextures","_canvas","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","ImageBitmap","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","generateMipmap","textureProperties","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","RGB","RGB32F","HALF_FLOAT","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","LINEAR","onTextureDispose","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","updateVideoTexture","__version","complete","uploadTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","isPowerOfTwoImage","glInternalFormat","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","WebGLUtils","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN","MAX","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","Group","isGroup","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","skew","ArrayCamera","cameras","isArrayCamera","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","cameraVR","isPresenting","currentSize","currentPixelRatio","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","updateControllers","controller","pose","hasPosition","orientation","buttonId","buttons","pressed","userHeight","getController","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","poseObject","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebXRManager","session","frameOfRef","inputSources","XRDevice","setCompatibleXRDevice","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","frameOfReferenceType","then","getInputSources","updateCamera","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","pointerMatrix","THREE","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","vr","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","compile","isLight","initMaterial","projectObject","opaqueObjects","transparentObjects","overrideMaterial","renderObjects","isImmediateRenderObject","camera2","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","isFog","density","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","Sprite","float32Array","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","LOD","levels","addLevel","getObjectForDistance","matrixPosition","Skeleton","boneInverses","calculateInverses","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","gbone","pos","rotq","scl","sw","vec","skinWeight","linecap","linejoin","Line","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","LineSegments","LineLoop","Points","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivide","appplyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateBufferData","generateSegment","generateIndices","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","prev","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","nextZ","prevZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q2","inside","Node","an","bp","sum","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","ahole","hl","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","toJSON$1","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","load","cached","setTimeout","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","callbacks","status","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","CompressedTextureLoader","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","ImageLoader","crossOrigin","onImageLoad","onImageError","substr","src","setCrossOrigin","CubeTextureLoader","urls","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","weight","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","tangent","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","track","trackType","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","getTrackTypeForValueTypeName","typeName","parseKeyframeTrack","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","MaterialLoader","setTextures","getTexture","shading","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","JSONLoader","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","ObjectLoader","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","ImageBitmapLoader","createImageBitmap","fetch","setOptions","res","blob","imageBitmap","catch","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","StereoCamera","eyeSep","instance","eyeRight","eyeLeft","eyeSepOnProjection","ymax","xmin","xmax","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","RESERVED_CHARS_RE","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","findNode","nodeName","root","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","targetObject","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedBufferGeometry","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setFromCamera","coords","intersectObjects","Clock","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","Spherical","other","makeSafe","vec3","Cylindrical","Box2","Line3","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","SpotLightHelper","cone","coneLength","coneWidth","getBoneList","boneList","SkeletonHelper","boneMatrix","matrixWorldInv","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","BoxHelper","Box3Helper","PlaneHelper","positions2","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","XHRLoader","BinaryTextureLoader","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","CubeGeometry","innerWidth","innerHeight","body","appendChild","directionalLight","starsGeometry","star","starsMaterial","starField","controls","OrbitControls","enableDamping","dampingFactor","enableZoom","enableKeys"],"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":"main.14616afe.map","sourceRoot":"..","sourcesContent":["// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '95';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( typeof OffscreenCanvas !== 'undefined' ) {\n\n\t\t\t\tcanvas = new OffscreenCanvas( image.width, image.height );\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t}\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty( ) ) return this;\n\n\t\tvar m = matrix.elements;\n\n\t\tvar xax = m[ 0 ] * this.min.x, xay = m[ 1 ] * this.min.x, xaz = m[ 2 ] * this.min.x;\n\t\tvar xbx = m[ 0 ] * this.max.x, xby = m[ 1 ] * this.max.x, xbz = m[ 2 ] * this.max.x;\n\t\tvar yax = m[ 4 ] * this.min.y, yay = m[ 5 ] * this.min.y, yaz = m[ 6 ] * this.min.y;\n\t\tvar ybx = m[ 4 ] * this.max.y, yby = m[ 5 ] * this.max.y, ybz = m[ 6 ] * this.max.y;\n\t\tvar zax = m[ 8 ] * this.min.z, zay = m[ 9 ] * this.min.z, zaz = m[ 10 ] * this.min.z;\n\t\tvar zbx = m[ 8 ] * this.max.z, zby = m[ 9 ] * this.max.z, zbz = m[ 10 ] * this.max.z;\n\n\t\tthis.min.x = Math.min( xax, xbx ) + Math.min( yax, ybx ) + Math.min( zax, zbx ) + m[ 12 ];\n\t\tthis.min.y = Math.min( xay, xby ) + Math.min( yay, yby ) + Math.min( zay, zby ) + m[ 13 ];\n\t\tthis.min.z = Math.min( xaz, xbz ) + Math.min( yaz, ybz ) + Math.min( zaz, zbz ) + m[ 14 ];\n\t\tthis.max.x = Math.max( xax, xbx ) + Math.max( yax, ybx ) + Math.max( zax, zbx ) + m[ 12 ];\n\t\tthis.max.y = Math.max( xay, xby ) + Math.max( yay, yby ) + Math.max( zay, zby ) + m[ 13 ];\n\t\tthis.max.z = Math.max( xaz, xbz ) + Math.max( yaz, ybz ) + Math.max( zaz, zbz ) + m[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tvec4 mvPosition;\\n\\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], renderer );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: {\n\t\t\tstateID: - 1,\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash.stateID = state.id;\n\t\tstate.hash.directionalLength = directionalLength;\n\t\tstate.hash.pointLength = pointLength;\n\t\tstate.hash.spotLength = spotLength;\n\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\tstate.hash.hemiLength = hemiLength;\n\t\tstate.hash.shadowsLength = shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGB32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGB16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGB8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGBA8;\n\n\t\t}\n\n\t\treturn glFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return gl.MIN;\n\t\t\t\tif ( p === MaxEquation ) return gl.MAX;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\tthis.userHeight = 1.6;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) {\n\n\t\t\tcamera.position.set( 0, scope.userHeight, 0 );\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t} else {\n\n\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK (mrdoob)\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar frameOfRef = null;\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfRef !== null;\n\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setSession = function ( value, options ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\n\t\t\tsession.requestFrameOfReference( options.frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfRef = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t// apply camera.parent to cameraVR\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfRef );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t// HACK (mrdoob)\n\t\t\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfRef );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\t\tif ( lightsHash === undefined ) {\n\n\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t}\n\n\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar panner = this.panner;\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ImageUtils, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","/* three-orbitcontrols addendum */ var THREE = require('three');\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t// console.log( 'handleKeyDown' );\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n/* three-orbitcontrols addendum */ module.exports = exports.default = THREE.OrbitControls;\n","import * as THREE from 'three';\nimport OrbitControls from '../node_modules/three-orbitcontrols/OrbitControls';\n// import SvgLoader from '../node_modules/three/examples/js/loaders/SVGLoader';\n\n//RERENDER\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\n//SCENE\nvar scene = new THREE.Scene(); // initialising the scene\nscene.background = new THREE.Color(0xffffff);\nscene.directionalLight = new THREE.DirectionalLight(0xf51485, 4.5);\n\n//CAMERA\nvar camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\ncamera.position.z = 80;\nscene.add(camera);\n\n\n//STARS\nvar starsGeometry = new THREE.Geometry();\nfor (var i = 0; i < 100000; i++) {\n  var star = new THREE.Vector3(9, 3, 9);\n  star.x = THREE.Math.randFloatSpread(1000);\n  star.y = THREE.Math.randFloatSpread(1000);\n  star.z = THREE.Math.randFloatSpread(1000);\n  starsGeometry.vertices.push(star);\n}\nvar starsMaterial = new THREE.PointsMaterial({\n  color: 0x23369c,\n  size: 0.4\n});\nvar starField = new THREE.Points(starsGeometry, starsMaterial);\nscene.add(starField);\n\n\n\n//OBJECT 2\n\nvar material = new THREE.MeshNormalMaterial;\nvar geometry = new THREE.BoxGeometry(10, 10, 10);\nvar sphere = new THREE.Mesh(geometry, material);\nscene.add(sphere);\n\n\n//SVG \n\n// var loader = new SvgLoader();\n\n// loader.load(\n//   // resource URL\n//   'assets/myface.svg',\n//   // called when the resource is loaded\n//   function (data) {\n\n//     var paths = data.paths;\n//     var group = new THREE.Group();\n\n//     for (var i = 0; i < paths.length; i++) {\n\n//       var path = paths[i];\n\n//       var material = new THREE.MeshBasicMaterial({\n//         color: path.color,\n//         side: THREE.DoubleSide,\n//         depthWrite: false\n//       });\n\n//       var shapes = path.toShapes(true);\n\n//       for (var j = 0; j < shapes.length; j++) {\n\n//         var shape = shapes[j];\n//         var geometry = new THREE.ShapeBufferGeometry(shape);\n//         var mesh = new THREE.Mesh(geometry, material);\n//         group.add(mesh);\n\n//       }\n\n//     }\n\n//     scene.add(group);\n\n//   });\n\n\n\n\n//CAMERA CONTROL \n\nconst controls = new OrbitControls(camera, renderer.domElement);\ncontrols.enableDamping = false;\ncontrols.dampingFactor = 0.25;\ncontrols.enableZoom = true;\ncontrols.enableKeys = true;\ncontrols.maxDistance = 200;\n\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  // required if controls.enableDamping or controls.autoRotate are set to true\n  controls.update();\n  renderer.render(scene, camera);\n}\n\nanimate();"]}